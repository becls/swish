% Copyright 2018 Beckman Coulter, Inc.
%
% Permission is hereby granted, free of charge, to any person
% obtaining a copy of this software and associated documentation files
% (the "Software"), to deal in the Software without restriction,
% including without limitation the rights to use, copy, modify, merge,
% publish, distribute, sublicense, and/or sell copies of the Software,
% and to permit persons to whom the Software is furnished to do so,
% subject to the following conditions:
%
% The above copyright notice and this permission notice shall be
% included in all copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
% MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
% BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
% ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
% CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.

\usepackage{sagian}
\makedecl{constructor}
\makedecl{event}
\makedecl{function}
\makedecl{method}
\makedecl{parameter}
\makedecl{procedure}
\makedecl{property}
\makedecl{syntax}
\makedecl{tuple}
\newcommand{\returns}{\makeresults{returns}}
\newcommand{\expandsto}{\makeresults{expands to}}
\newcommand{\hasvalue}{\makeresults{value}}
\newcommand{\genserver}[2]{\paragraph* {\code{#2}}\index{#1!#2@\code{#2}}}
\newenvironment{pubevent}[1]{\begin{event}\codeindex{#1}\end{event}\antipar
  \begin{argtbl}}
  {\end{argtbl}}
\newenvironment{tupledef}[1]{\begin{tuple}\codeindex{#1}\end{tuple}\antipar
  \begin{argtbl}}{\end{argtbl}}
\newcommand{\concern}[1]{\textsf{Concern:} #1}
\newcommand{\mitigation}{\textsf{Mitigation:} }
\newenvironment{impl}{\textbf{Implementation:} }{}
\newcommand{\implementation}[1]{\begin{impl}#1\end{impl}}

% For long options (--help) we want to explicitly see two hyphen characters
% rather than an en-dash. For normal text use sopt and lopt. Inside
% codebegin/end blocks Emacs may convert the characters but LaTeX will
% still render them properly.

\newcommand{\sopt}[1]{\code{{-}#1}}
\newcommand{\lopt}[1]{\code{{-}{-}#1}}
\newcommand{\str}[1]{\code{"#1"}}
